apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: prometheus-server-kafka
  namespace: monitoring
  labels:
    app: prometheus-server-kafka
    component: core
spec:
  replicas: 1
  template:
    metadata:
      name: prometheus-server-kafka
      labels:
        app: prometheus-server-kafka
        component: core
    spec:
      imagePullSecrets:
        - name: go-nexus
      containers:
      - name: prometheus-server-kafka
        #image: prom/prometheus:v1.6.1
        image: prom/prometheus:v1.7.1
        args:
          - '-storage.local.retention=6h'
        #  - '-storage.local.memory-chunks=500000'
          - '-config.file=/etc/prometheus/prometheus.yml'
          - '-storage.local.target-heap-size=3221225472'
          - '-query.max-concurrency=40'
          - '-query.timeout=30s'
          - '-storage.local.path=kafka'
        #  - '-alertmanager.url=http://alertmanager:9093'
          - '-alertmanager.url=http://am-hpa-0.am-hpa:9093'
        ports:
        - name: webuide
          containerPort: 9090
        resources:
          requests:
            #cpu: 500m
            memory: 3G
          limits:
            #cpu: 500m
            memory: 3G
        env:
        - name: TZ
          value: Asia/Chongqing
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
        - name: hpa-rules
          mountPath: /etc/alertmanager
        - name: data-dir
          mountPath: /prometheus

        - name: record-rules
          mountPath: /etc/prom-record
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-configmap-kafka
      - name: hpa-rules
        configMap:
          name: hpa-rules
      - name: record-rules
        configMap:
          name: record-rules
      - name: data-dir
        persistentVolumeClaim:
          claimName: prometheus-pvc
      nodeSelector:
        app: prometheus
